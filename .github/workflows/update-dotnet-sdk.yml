name: update-dotnet-sdk

env:
  GIT_COMMIT_USER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  GIT_COMMIT_USER_NAME: github-actions[bot]
  TERM: xterm

on:
  schedule:
    - cron:  '30 09 * * MON-FRI'
    - cron:  '00 19 * * TUE'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  update-dotnet-sdk:
    name: Update .NET SDK
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.fork == false }}

    permissions:
      contents: write
      pull-requests: write

    steps:

    - name: Checkout code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update .NET SDK
      id: update-dotnet-sdk
      uses: martincostello/update-dotnet-sdk@8d99db1db36692f0d5c5bf3ef91fb654c2d4e298 # v2.1.0
      with:
        labels: "dependencies,.NET"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        user-email: ${{ env.GIT_COMMIT_USER_EMAIL }}
        user-name: ${{ env.GIT_COMMIT_USER_NAME }}

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@607fce577a46308457984d59e4954e075820f10a # v3.0.3
      if : ${{ steps.update-dotnet-sdk.outputs.sdk-updated == 'true' }}

    - name: Setup NuGet cache
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      if : ${{ steps.update-dotnet-sdk.outputs.sdk-updated == 'true' }}
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
        restore-keys: ${{ runner.os }}-nuget-

    - name: Update NuGet packages
      if : ${{ steps.update-dotnet-sdk.outputs.sdk-updated == 'true' }}
      shell: pwsh
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        DOTNET_NOLOGO: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
        DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
        NUGET_XMLDOC_MODE: skip
      run: |
        $ErrorActionPreference = "Stop"

        dotnet tool install --global dotnet-outdated-tool

        $tempPath = [System.IO.Path]::GetTempPath()
        $updatesPath = (Join-Path $tempPath "dotnet-outdated.json")

        Write-Host "Checking for .NET NuGet package(s) to update..."

        dotnet outdated `
          --upgrade `
          --version-lock Major `
          --output $updatesPath `
          --include "Microsoft.AspNetCore." `
          --include "Microsoft.EntityFrameworkCore." `
          --include "Microsoft.Extensions." `
          --include "Microsoft.NET.Test.Sdk"

        $dependencies = @()

        if (Test-Path $updatesPath) {
          $dependencies = `
            Get-Content -Path $updatesPath | `
            ConvertFrom-Json | `
            Select-Object -ExpandProperty projects | `
            Select-Object -ExpandProperty TargetFrameworks | `
            Select-Object -ExpandProperty Dependencies | `
            Sort-Object -Property Name -Unique
        }

        if ($dependencies.Count -gt 0) {
          Write-Host "Found $($dependencies.Count) .NET NuGet package(s) to update." -ForegroundColor Green

          $commitMessageLines = @()

          if ($dependencies.Count -eq 1) {
            $commitMessageLines += "Bump $($dependencies[0].Name) from $($dependencies[0].ResolvedVersion) to $($dependencies[0].LatestVersion)"
            $commitMessageLines += ""
            $commitMessageLines += "Bumps $($dependencies[0].Name) from $($dependencies[0].ResolvedVersion) to $($dependencies[0].LatestVersion)."
          } else {
            $commitMessageLines += "Bump .NET NuGet packages"
            $commitMessageLines += ""
            $commitMessageLines += "Bumps .NET dependencies to their latest versions for the .NET ${{ steps.update-dotnet-sdk.outputs.sdk-version }} SDK."
            $commitMessageLines += ""
            foreach ($dependency in $dependencies) {
              $commitMessageLines += "Bumps $($dependency.Name) from $($dependency.ResolvedVersion) to $($dependency.LatestVersion)."
            }
          }

          $commitMessageLines += ""
          $commitMessageLines += "---"
          $commitMessageLines += "updated-dependencies:"

          foreach ($dependency in $dependencies) {
            $commitMessageLines += "- dependency-name: $($dependency.Name)"
            $commitMessageLines += "  dependency-type: direct:production"
            $commitMessageLines += "  update-type: version-update:semver-$($dependency.UpgradeSeverity.ToLowerInvariant())"
          }

          $commitMessageLines += "..."
          $commitMessageLines += ""
          $commitMessageLines += ""

          $commitMessage = $commitMessageLines -join "`n"

          git config user.email "${{ env.GIT_COMMIT_USER_EMAIL }}"
          git config user.name "${{ env.GIT_COMMIT_USER_NAME }}"

          git add .
          git commit -m $commitMessage
          git push

          Write-Host "Pushed update to $($dependencies.Count) NuGet package(s)." -ForegroundColor Green
        }
        else {
          Write-Host "There are no .NET NuGet packages to update." -ForegroundColor Green
        }
